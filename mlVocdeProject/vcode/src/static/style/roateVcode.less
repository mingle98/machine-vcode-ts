@import './lib.less';
@import './animation.less';

.roateVcodeBox {
    width: 100%;
    background-color: #f5f5f5;
    border-radius: 10px;
    min-height: 2 / 3 * @min-vcodeWrapWidth * 0.7;
    max-height: 2 / 3 * @max-vcodeWrapWidth * 0.7;
    height: 2 / 3 * @vcodeWrapWidth * 0.7;
    border-radius: 5px;
    overflow: hidden;
    .roateVcodeImgArea {
        width: 100%;
        height: 100%;
        // background-color: rgb(183, 183, 183);
        position: relative;
        .roateResetBtn {
            position: absolute;
            width: @roateVcode-resetBthWidth;
            height: @roateVcode-resetBthWidth;
            top: 10px;
            right: 10px;
            background: url('../imgs/reset.png') no-repeat center center;
            background-size: 100% 100%;
            cursor: pointer;
            &:hover {
                opacity: .7;
            }
        }
        .roateVcodeImgwrap {
            width: @roateVcode-roateWidth;
            height: @roateVcode-roateWidth;
            min-width: @roateVcode-roateWidth * 0.8;
            max-width: @roateVcode-roateWidth * 1.1;
            position: absolute;
            left: 50%;
            top: 50%;
            background-color: aquamarine;
            transform: translate(-50%, -50%);
            border-radius: 50%;
            border: @roateVcode-roateBorder;
            overflow: hidden;
            box-shadow: 0 0 10px rgb(83, 83, 83);
            transition: all 100ms linear;
            .roateVcodeImg {
                width: 100%;
                height: 100%;
                transform: scale(1.1);
            }
            .roateImgIconBox {
                width: 100%;
                height: 100%;
                position: absolute;
                left: 0;
                display: none;
                top: 0;
                background-color: rgba(0, 0, 0, .7);
                .roateImgIconBox_sucess {
                    width: 60%;
                    height: 60%;
                    background: url('../imgs/success.png') no-repeat center center;
                    background-size: contain;
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    display: none;
                    transform: translate(-50%, -50%);
                }
                .roateImgIconBox_fail {
                    width: 60%;
                    height: 60%;
                    background: url('../imgs/fail.png') no-repeat center center;
                    background-size: contain;
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    transform: translate(-50%, -50%);
                }
            }
        }
    }
}

.roateOperateBox {
    border-radius: 3px;
    -webkit-user-select:none;/*webkit浏览器*/ 
    -moz-user-select:none;/*火狐*/ 
    -ms-user-select:none;/*IE10*/ 
    user-select:none;
    min-height: 2 / 3 * @min-vcodeWrapWidth * 0.3;
    max-height: 2 / 3 * @max-vcodeWrapWidth * 0.3;
    height: 2 / 3 * @vcodeWrapWidth * 0.3;
    width: 100%;
    // overflow: hidden;
    background-color: white;
    .roateOperateTips {
        padding: 5px;
        font-size: @roateVcodeVcodeTips-fontSize;
        font-weight: 600;
        font-size: 15px;
    }
}


.roateVerifyAction_inbar {
    background-color: rgb(0, 183, 238) !important;
    border: 1px solid rgba(0, 183, 238, 1) !important;
}

.roateVerifyAction_outbar {
    .puzzleVcodeInnerBarAction {
        background-color: rgba(0, 183, 238, .2) !important;
        border: 1px solid rgba(0, 183, 238, 1) !important;
    }
    // box-shadow: 0 0 5px rgb(0, 183, 238);
}

.roateVerifyAction_tips {
    color: rgb(0, 183, 238);
}

.roateVerifyFail_inbar {
    background-color: rgb(191, 0, 0) !important;
    // animation: shake 1s linear initial;
    border: 1px solid rgba(191, 0, 0, 1) !important;
    animation: shake .5s;
}
.roateVerifyFail_shapCtx {
    animation: shakeShape .5s;
}

.roateVerifyFail_outbar {
    .puzzleVcodeInnerBarAction {
        background-color: rgba(191, 0, 0, .2) !important;
        border: 1px solid rgba(191, 0, 0, 1) !important;
    }
    // box-shadow: 0 0 5px rgb(191, 0, 0);
}

.roateVerifyFail_tips {
    color: rgb(191, 0, 0);
}


.roateVerifySucc_inbar {
    background-color: rgb(0, 185, 31) !important;
    border: 1px solid rgba(0, 185, 31, 1) !important;
}

.roateVerifySucc_outbar {
    .puzzleVcodeInnerBarAction {
        background-color: rgba(0, 185, 31, .2) !important;
        border: 1px solid rgba(0, 185, 31, 1) !important;
    }
    // box-shadow: 0 0 5px rgb(0, 185, 31);
}

.roateVerifySucc_tips {
    color: rgb(0, 185, 31);
}

.roateVerifyAction__roateAreaBg {
    background-color: rgba(0, 183, 238, .5);
}

.roateVerifyFail__roateAreaBg {
    background-color: rgb(191, 0, 0.5);
}

.roateVerifySucc__roateAreaBg {
    background-color: rgb(0, 185, 31, .5);
}